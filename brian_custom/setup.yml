---
user_message: |
  - Be sure to update the 'activation_key' and 'org_id' extra variables for 'LINUX / Register'. https://access.redhat.com/management/activation_keys
  - Update Credential for Insights Inventory with Red Hat account.
  - Add variables for system_roles. https://console.redhat.com/ansible/automation-hub/repo/published/redhat/rhel_system_roles
controller_components:
  - projects  
  - credential_types
  - credentials
  # - applications
  - settings
  # - inventories
  # - hosts
  # - inventory_sources
  - execution_environments
  - job_templates
  - workflow_job_templates
  - job_launch
  # - project_update

controller_projects:
  - name: Cloud Deploy
    organization: Default
    scm_type: git
    scm_url: 'https://github.com/brianstinehart/Cloud-Deploy.git'

controller_credential_types:
  - name: "ServiceNow"
    kind: "cloud"
    inputs:
      fields:
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
        - id: instance
          type: string
          label: Instance
      required:
        - username
        - password
        - instance
    injectors:
      extra_vars:
        snow_username: !unsafe '{{ username }}'
        snow_password: !unsafe '{{ password }}'
        snow_instance: !unsafe '{{ instance }}'

  - name: "URI"
    kind: "cloud"
    inputs:
      fields:
        - id: uri_user
          type: string
          label: URI Username
        - id: uri_password
          type: string
          label: URI Password
          secret: true
        - id: controller_url_prefix
          type: string
          label: Controller URI Prefix
        - id: controller_url_suffix
          type: string
          label: Controller URI Suffix
      required:
        - uri_user
        - uri_password
        - controller_url_prefix
        - controller_url_suffix
    injectors:
      extra_vars:
        uri_user: '{{ uri_user }}'
        uri_password: '{{ uri_password }}'
        controller_url_prefix: '{{ controller_url_prefix }}'
        controller_url_suffix: '{{ controller_url_suffix }}'

controller_credentials:
  - name: ServiceNow Dev
    credential_type: ServiceNow
    organization: Default
    inputs:
      username: "{{ username }}"
      password: "{{ password }}"
      instance: "{{ instance }}"

  - name: URI Credential
    credential_type: URI
    organization: Default
    inputs:
      uri_user: '{{ uri_user }}'
      uri_password: '{{ uri_password }}'
      controller_url_prefix: '{{ controller_url_prefix }}'
      controller_url_suffix: '{{ controller_url_suffix }}'

# controller_applications:
#   - name: Brian ServiceNow Dev
#     description: "{{ instance }}"
#     organization: "Default"
#     authorization_grant_type: "authorization-code"
#     redirect_uris: "https://{{ instance }}.service-now.com/oauth_redirect.do"
#     client_type: "confidential"

controller_settings:
  - name: ALLOW_OAUTH2_FOR_EXTERNAL_USERS
    value: true

# controller_inventories:
#   - name: local-demo
#     organization: Default

# controller_hosts:
#   - name: localhost
#     inventory: local-demo
#     variables:
#       ansible_connection: local

controller_execution_environments:
  - name: "ServiceNow EE"
    image: quay.io/rhbs/aap-ee

controller_templates:
  - name: "ServiceNow Notification"
    job_type: run
    inventory: "Demo Inventory"
    project: "Cloud Deploy"
    playbook: "playbooks/servicenow/snow_notify.yml"
    execution_environment: ServiceNow EE
    credentials:
    - "ServiceNow Dev"
    extra_vars:
      snow_note: "This request has been received by Ansible Automation Platform. Please monitor Activity Stream for progress."
      ansible_python_interpreter: /usr/bin/python3

  - name: "ServiceNow Create Incident"
    job_type: run
    inventory: "Demo Inventory"
    project: "Cloud Deploy"
    playbook: "playbooks/servicenow/snow_create_incident.yml"
    execution_environment: ServiceNow EE
    credentials:
    - "ServiceNow Dev"
    extra_vars:
      ansible_python_interpreter: /usr/bin/python3

  - name: "ServiceNow Create Change Request"
    job_type: run
    inventory: "Demo Inventory"
    project: "Cloud Deploy"
    playbook: "playbooks/servicenow/snow_create_change_request.yml"
    execution_environment: ServiceNow EE
    credentials:
    - "ServiceNow Dev"
    extra_vars:
      ansible_python_interpreter: /usr/bin/python3
      snow_host: https://dev97360.service-now.com/

  - name: "ServiceNow Close Change Request"
    job_type: run
    inventory: "Demo Inventory"
    project: "Cloud Deploy"
    playbook: "playbooks/servicenow/snow_close_change_request.yml"
    execution_environment: ServiceNow EE
    credentials:
    - "ServiceNow Dev"
    extra_vars:
      ansible_python_interpreter: /usr/bin/python3
      snow_host: https://dev97360.service-now.com/
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Change Request Number
          question_description: ServiceNow Incident Number
          required: true
          type: text
          variable: inc_number
          min: 0
          max: 1024
          default: ''
          choices: ''
          new_question: true
        - question_name: Resolution notes
          question_description: ServiceNow Resolution Notes
          required: true
          type: text
          variable: close_notes
          min: 0
          max: 1024
          default: ''
          choices: ''
          new_question: true

  - name: "ServiceNow Close Incident"
    job_type: run
    inventory: "Demo Inventory"
    project: "Cloud Deploy"
    playbook: "playbooks/servicenow/snow_close_incident.yml"
    execution_environment: ServiceNow EE
    credentials:
    - "ServiceNow Dev"
    extra_vars:
      ansible_python_interpreter: /usr/bin/python3
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: Incident Number
          question_description: ServiceNow Incident Number
          required: true
          type: text
          variable: inc_number
          min: 0
          max: 1024
          default: ''
          choices: ''
          new_question: true
        - question_name: Resolution notes
          question_description: ServiceNow Resolution Notes
          required: true
          type: text
          variable: close_notes
          min: 0
          max: 1024
          default: ''
          choices: ''
          new_question: true

  - name: "ServiceNow Setup"
    job_type: run
    inventory: "Demo Inventory"
    project: "Cloud Deploy"
    playbook: "playbooks/servicenow/snow_setup.yml"
    execution_environment: ServiceNow EE
    credentials:
    - "ServiceNow Dev"
    - "URI Credential"
    extra_vars:
      ansible_python_interpreter: /usr/bin/python3
      demo: brian_custom

  # - name: "Brian ServiceNow Setup"
  #   state: absent

# controller_workflows:
#   - name: "Deploy App on Pre-Prod (AWS)"
#     survey_enabled: true
#     survey_spec:
#       name: ''
#       description: ''
#       spec:
#         - question_name: ServiceNow Request Number
#           question_description: ServiceNow Request Number
#           required: true
#           type: text
#           variable: snow_request
#           min: 0
#           max: 1024
#           default: ''
#           choices: ''
#           new_question: true

controller_launch_jobs:
  - name: ServiceNow Setup

# controller_credential_types:
#   - name: "Insights Collection"
#     kind: cloud
#     inputs:
#       fields:
#         - id: insights_user
#           type: string
#           label: Insights User
#         - id: insights_password
#           type: string
#           label: Insights Password
#           secret: true
#     injectors:
#       env:
#         INSIGHTS_USER: "{% raw %}{  { insights_user  }}{% endraw %}"
#         INSIGHTS_PASSWORD: "{% raw %}{  { insights_password  }}{% endraw %}"

# controller_credentials:
#   - name: Insights Inventory
#     credential_type: Insights Collection
#     organization: Default
#     inputs:
#       insights_user: REPLACEME
#       insights_password: REPLACEME

# controller_inventory_sources:
#   - name: Insights Inventory
#     inventory: Workshop Inventory
#     source: scm
#     source_project: Ansible official demo project
#     source_path: linux/inventory.insights.yml
#     credential: Insights Inventory

# controller_templates:
#   - name: "LINUX / Register"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/ec2_register.yml"
#     execution_environment: Default execution environment
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     extra_vars:
#       activation_key: undef
#       org_id: undef
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: Choose Environment
#           type: multiplechoice
#           variable: env
#           choices:
#             - Dev
#             - QA
#             - Prod
#           required: true
#         - question_name: Ansible Group
#           type: text
#           variable: ansible_group
#           required: true
#   - name: "LINUX / Troubleshoot"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/tshoot.yml"
#     execution_environment: Default execution environment
#     use_fact_cache: true
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#   - name: "LINUX / Temporary Sudo"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/temp_sudo.yml"
#     execution_environment: Default execution environment
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: User Name
#           type: text
#           variable: sudo_user
#           required: true
#         - question_name: How long to grant access in minutes
#           type: integer
#           variable: sudo_time
#           default: 10
#           required: true
#   - name: "LINUX / Patching"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/patching.yml"
#     execution_environment: Default execution environment
#     use_fact_cache: true
#     job_type: check
#     ask_job_type_on_launch: yes
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#   - name: "LINUX / Start Service"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/service_start.yml"
#     execution_environment: Default execution environment
#     use_fact_cache: true
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: Service Name
#           type: text
#           variable: service_name
#           required: true
#   - name: "LINUX / Stop Service"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/service_stop.yml"
#     execution_environment: Default execution environment
#     use_fact_cache: true
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: Service Name
#           type: text
#           variable: service_name
#           required: true
#   - name: "LINUX / Run Shell Script"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/run_script.yml"
#     execution_environment: Default execution environment
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: Shell Script
#           type: textarea
#           variable: shell_script
#           required: true
#   - name: "LINUX / Fact Scan"
#     project: Fact Scan
#     playbook: scan_facts.yml
#     inventory: Workshop Inventory
#     execution_environment: Default execution environment
#     ask_limit_on_launch: true
#     use_fact_cache: true
#     credentials:
#       - Workshop Credential
#   - name: "LINUX / Podman Webserver"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/podman.yml"
#     execution_environment: Default execution environment
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: Web Page Message
#           type: textarea
#           variable: message
#           required: true
#   - name: "LINUX / System Roles"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/system_roles.yml"
#     execution_environment: Default execution environment
#     diff_mode: yes
#     ask_job_type_on_launch: yes
#     extra_vars:
#       system_roles: undef
#     credentials:
#     - "Workshop Credential"
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#   - name: "LINUX / Compliance"
#     job_type: run
#     inventory: "Workshop Inventory"
#     project: "Ansible official demo project"
#     playbook: "linux/compliance.yml"
#     execution_environment: Default execution environment
#     credentials:
#     - "Workshop Credential"
#     extra_vars:
#       sudo_remove_nopasswd: false
#     survey_enabled: true
#     survey:
#       name: ''
#       description: ''
#       spec:
#         - question_name: Server Name or Pattern
#           type: text
#           variable: HOSTS
#           required: true
#         - question_name: Compliance Profile
#           type: multiplechoice
#           variable: compliance_profile
#           required: true
#           choices:
#             - stig

# controller_projects:
#   - name: Ansible official demo project
#     scm_url: 'https://github.com/brianstinehart/product-demos/'